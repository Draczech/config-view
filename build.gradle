plugins {
  id 'com.github.hierynomus.license' version '0.14.0'
  id 'com.github.johnrengelman.shadow' version '2.0.1'
  id 'com.github.spotbugs' version '4.0.8'
  id "com.diffplug.gradle.spotless" version "3.25.0"
  id 'net.researchgate.release' version '2.6.0'
  id 'com.bmuschko.nexus' version '2.3.1' apply false
}

ext {
  cglibVersion = '3.2.6'
  configVersion = '1.4.0'
  junitJupiterVersion = '5.6.0'
}

group = 'cz.datadriven.utils'

apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'maven-publish'
apply from: "${rootProject.projectDir}/gradle/publishing.gradle"

repositories {
  mavenCentral()
}

dependencies {
  implementation "cglib:cglib:${cglibVersion}"
  implementation "com.typesafe:config:${configVersion}"
  compileOnly "com.github.spotbugs:spotbugs-annotations:${spotbugs.toolVersion.get()}"
  testImplementation("org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}")
  testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}")
}

spotless {
  java {
    googleJavaFormat("1.7")
  }
}

license {
  include '**/*.java'
  mapping('java', 'SLASHSTAR_STYLE')
  header = rootProject.file('HEADER')
  strictCheck = true
  ext.year = "${Calendar.getInstance().get(Calendar.YEAR)}"
  ext.name = 'Datadriven.cz'
}

spotbugsMain {
  effort = 'max'
  reportLevel = 'low'
  reports {
    xml {
      enabled = false
    }
    html {
      enabled = true
    }
  }
}

gradle.projectsEvaluated {
  tasks.withType(JavaCompile) {
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
  }
}

sourceSets {
  test.compileClasspath += configurations.compileOnly
  test.runtimeClasspath += configurations.compileOnly
}

release {
  tagTemplate = 'v$version'
}

test {
  useJUnitPlatform()
}
